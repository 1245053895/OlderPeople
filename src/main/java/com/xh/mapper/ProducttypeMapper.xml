<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.mapper.ProducttypeMapper">
  <resultMap id="BaseResultMap" type="com.xh.po.Producttype">
    <id column="ProductTypeId" jdbcType="INTEGER" property="producttypeid" />
    <result column="ProductTypeName" jdbcType="VARCHAR" property="producttypename" />
    <result column="ProductType_A" jdbcType="VARCHAR" property="producttypeA" />
    <result column="ProductType_B" jdbcType="VARCHAR" property="producttypeB" />
    <result column="ProductType_C" jdbcType="VARCHAR" property="producttypeC" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ProductTypeId, ProductTypeName, ProductType_A, ProductType_B, ProductType_C
  </sql>
  <select id="selectByExample" parameterType="com.xh.po.ProducttypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from producttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from producttype
    where ProductTypeId = #{producttypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from producttype
    where ProductTypeId = #{producttypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xh.po.ProducttypeExample">
    delete from producttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xh.po.Producttype">
    insert into producttype (ProductTypeId, ProductTypeName, ProductType_A, 
      ProductType_B, ProductType_C)
    values (#{producttypeid,jdbcType=INTEGER}, #{producttypename,jdbcType=VARCHAR}, #{producttypeA,jdbcType=VARCHAR}, 
      #{producttypeB,jdbcType=VARCHAR}, #{producttypeC,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xh.po.Producttype">
    insert into producttype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="producttypeid != null">
        ProductTypeId,
      </if>
      <if test="producttypename != null">
        ProductTypeName,
      </if>
      <if test="producttypeA != null">
        ProductType_A,
      </if>
      <if test="producttypeB != null">
        ProductType_B,
      </if>
      <if test="producttypeC != null">
        ProductType_C,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="producttypeid != null">
        #{producttypeid,jdbcType=INTEGER},
      </if>
      <if test="producttypename != null">
        #{producttypename,jdbcType=VARCHAR},
      </if>
      <if test="producttypeA != null">
        #{producttypeA,jdbcType=VARCHAR},
      </if>
      <if test="producttypeB != null">
        #{producttypeB,jdbcType=VARCHAR},
      </if>
      <if test="producttypeC != null">
        #{producttypeC,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xh.po.ProducttypeExample" resultType="java.lang.Long">
    select count(*) from producttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update producttype
    <set>
      <if test="record.producttypeid != null">
        ProductTypeId = #{record.producttypeid,jdbcType=INTEGER},
      </if>
      <if test="record.producttypename != null">
        ProductTypeName = #{record.producttypename,jdbcType=VARCHAR},
      </if>
      <if test="record.producttypeA != null">
        ProductType_A = #{record.producttypeA,jdbcType=VARCHAR},
      </if>
      <if test="record.producttypeB != null">
        ProductType_B = #{record.producttypeB,jdbcType=VARCHAR},
      </if>
      <if test="record.producttypeC != null">
        ProductType_C = #{record.producttypeC,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update producttype
    set ProductTypeId = #{record.producttypeid,jdbcType=INTEGER},
      ProductTypeName = #{record.producttypename,jdbcType=VARCHAR},
      ProductType_A = #{record.producttypeA,jdbcType=VARCHAR},
      ProductType_B = #{record.producttypeB,jdbcType=VARCHAR},
      ProductType_C = #{record.producttypeC,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xh.po.Producttype">
    update producttype
    <set>
      <if test="producttypename != null">
        ProductTypeName = #{producttypename,jdbcType=VARCHAR},
      </if>
      <if test="producttypeA != null">
        ProductType_A = #{producttypeA,jdbcType=VARCHAR},
      </if>
      <if test="producttypeB != null">
        ProductType_B = #{producttypeB,jdbcType=VARCHAR},
      </if>
      <if test="producttypeC != null">
        ProductType_C = #{producttypeC,jdbcType=VARCHAR},
      </if>
    </set>
    where ProductTypeId = #{producttypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xh.po.Producttype">
    update producttype
    set ProductTypeName = #{producttypename,jdbcType=VARCHAR},
      ProductType_A = #{producttypeA,jdbcType=VARCHAR},
      ProductType_B = #{producttypeB,jdbcType=VARCHAR},
      ProductType_C = #{producttypeC,jdbcType=VARCHAR}
    where ProductTypeId = #{producttypeid,jdbcType=INTEGER}
  </update>
</mapper>