<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.mapper.ShopcarMapper">
  <resultMap id="BaseResultMap" type="com.xh.po.Shopcar">
    <id column="ShopCarId" jdbcType="INTEGER" property="shopcarid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="ProductId" jdbcType="INTEGER" property="productid" />
    <result column="orderamount" jdbcType="INTEGER" property="orderamount" />
    <result column="Price" jdbcType="DOUBLE" property="price" />
    <result column="ShopCar_A" jdbcType="VARCHAR" property="shopcarA" />
    <result column="ShopCar_B" jdbcType="VARCHAR" property="shopcarB" />
    <result column="ShopCar_C" jdbcType="VARCHAR" property="shopcarC" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ShopCarId, UserId, ProductId, orderamount, Price, ShopCar_A, ShopCar_B, ShopCar_C
  </sql>
  <select id="selectByExample" parameterType="com.xh.po.ShopcarExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shopcar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shopcar
    where ShopCarId = #{shopcarid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shopcar
    where ShopCarId = #{shopcarid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xh.po.ShopcarExample">
    delete from shopcar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xh.po.Shopcar">
    insert into shopcar (ShopCarId, UserId, ProductId, 
      orderamount, Price, ShopCar_A, 
      ShopCar_B, ShopCar_C)
    values (#{shopcarid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, 
      #{orderamount,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{shopcarA,jdbcType=VARCHAR}, 
      #{shopcarB,jdbcType=VARCHAR}, #{shopcarC,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xh.po.Shopcar">
    insert into shopcar
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopcarid != null">
        ShopCarId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="productid != null">
        ProductId,
      </if>
      <if test="orderamount != null">
        orderamount,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="shopcarA != null">
        ShopCar_A,
      </if>
      <if test="shopcarB != null">
        ShopCar_B,
      </if>
      <if test="shopcarC != null">
        ShopCar_C,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopcarid != null">
        #{shopcarid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="orderamount != null">
        #{orderamount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="shopcarA != null">
        #{shopcarA,jdbcType=VARCHAR},
      </if>
      <if test="shopcarB != null">
        #{shopcarB,jdbcType=VARCHAR},
      </if>
      <if test="shopcarC != null">
        #{shopcarC,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xh.po.ShopcarExample" resultType="java.lang.Long">
    select count(*) from shopcar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shopcar
    <set>
      <if test="record.shopcarid != null">
        ShopCarId = #{record.shopcarid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null">
        ProductId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.orderamount != null">
        orderamount = #{record.orderamount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        Price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.shopcarA != null">
        ShopCar_A = #{record.shopcarA,jdbcType=VARCHAR},
      </if>
      <if test="record.shopcarB != null">
        ShopCar_B = #{record.shopcarB,jdbcType=VARCHAR},
      </if>
      <if test="record.shopcarC != null">
        ShopCar_C = #{record.shopcarC,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shopcar
    set ShopCarId = #{record.shopcarid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      ProductId = #{record.productid,jdbcType=INTEGER},
      orderamount = #{record.orderamount,jdbcType=INTEGER},
      Price = #{record.price,jdbcType=DOUBLE},
      ShopCar_A = #{record.shopcarA,jdbcType=VARCHAR},
      ShopCar_B = #{record.shopcarB,jdbcType=VARCHAR},
      ShopCar_C = #{record.shopcarC,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xh.po.Shopcar">
    update shopcar
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        ProductId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="orderamount != null">
        orderamount = #{orderamount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="shopcarA != null">
        ShopCar_A = #{shopcarA,jdbcType=VARCHAR},
      </if>
      <if test="shopcarB != null">
        ShopCar_B = #{shopcarB,jdbcType=VARCHAR},
      </if>
      <if test="shopcarC != null">
        ShopCar_C = #{shopcarC,jdbcType=VARCHAR},
      </if>
    </set>
    where ShopCarId = #{shopcarid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xh.po.Shopcar">
    update shopcar
    set UserId = #{userid,jdbcType=INTEGER},
      ProductId = #{productid,jdbcType=INTEGER},
      orderamount = #{orderamount,jdbcType=INTEGER},
      Price = #{price,jdbcType=DOUBLE},
      ShopCar_A = #{shopcarA,jdbcType=VARCHAR},
      ShopCar_B = #{shopcarB,jdbcType=VARCHAR},
      ShopCar_C = #{shopcarC,jdbcType=VARCHAR}
    where ShopCarId = #{shopcarid,jdbcType=INTEGER}
  </update>
</mapper>