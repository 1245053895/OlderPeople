<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.mapper.customerMapper.UserLoginMapper">
    <!--查询所有用户-->
    <select id="SelectAllQuerry" resultType="com.xh.po.User" parameterType="list">
         SELECT UserId, UserName, UserPwd, UserSex, UserRealName, UserPhone, UserBirthday, UserAddress,
          UserEmail, CreditsCore, UserInputDate, UserZip, UserLoginCount, UserLoginTime, User_A,
          User_B, User_C FROM user
    </select>
    <!--根据登录用户的用户名查询出该登录用户的用户名和密码-->
    <select id="selectAllNameAndPwd" resultType="user" parameterType="String">
    SELECT UserId, UserName, UserPwd, UserSex, UserRealName, UserPhone, UserBirthday, UserAddress,
    UserEmail, CreditsCore, UserInputDate, UserZip, UserLoginCount, UserLoginTime, User_A as userA,
    User_B as userB, User_C as userC  FROM `user` WHERE UserName=#{username}
    </select>

    <!--向用户表中根据用户的id更新用户最近一次登录的时间-->
    <update id="UpdateUserLoginTimeById" parameterType="user">
        UPDATE user SET UserLoginTime=#{userlogintime} WHERE UserId=#{userid}
    </update>

    <!--根据用户的id查询用户登录的总次数是否为空-->
    <select id="IsUserLoginNull" parameterType="Integer" resultType="Integer">
          SELECT UserLoginCount FROM  `user` WHERE UserId=#{userid}
    </select>

    <!--当用户登录的总次数为空时，就对它赋1的值-->
    <update id="LoginCountOne" parameterType="Integer">
        UPDATE `user`  SET UserLoginCount=1  WHERE UserId=#{userid}
    </update>

    <!--当用户登录的总次数为1时，让它自动加一-->
    <update id="AutoIncreaeOne" parameterType="Integer">
        UPDATE `user`  SET UserLoginCount=UserLoginCount+1  WHERE UserId=#{userid}
    </update>





    <!--根据登录用户的id向用户日志表中插入用户开始登录的时间，用户的登录ip-->
    <insert id="insertStartTimeAndIp" parameterType="com.xh.po.Userlog">
        INSERT INTO userlog(UserId,StartLoginTime,UserIp) VALUES(#{userid},#{startlogintime},#{userip})
    </insert>

    <!--根据用户id插入用户的结束登录时间-->
    <insert id="updateEndLoginTime" parameterType="com.xh.po.Userlog">
        UPDATE userlog SET EndLoginTime=#{endlogintime} WHERE UserId=#{userid}
    </insert>

    <!--用户注册后向数据库中插入一个新的用户-->
    <insert id="insertNewUser" parameterType="user">
        INSERT INTO user(UserName,UserPhone,UserPwd,UserInputDate,User_A ) VALUES (#{username},#{userphone},#{userpwd},#{userinputdate},#{userA})
    </insert>


    <!--个人资料中修改登录密码，根据登录用户的id修改密码-->
    <update id="updataPwdById" parameterType="user">
        UPDATE user SET UserPwd=#{userpwd} WHERE UserId=#{userid}
    </update>

    <!--个人中心里修改登录密码，根据登录用户的id修改电话-->
    <update id="updataLoginPhone" parameterType="user">
        UPDATE user SET UserPhone=#{userphone} WHERE UserId=#{userid}
    </update>

    <!--个人中心我的积分显示-->
    <select id="queryAllById" parameterType="Integer" resultType="totalCreditsById">
        SELECT ProductPicture,ProductName,product.ProductId, ProductCredits,order.EndTime FROM
               product,`order`,orderproduct  WHERE `order`.UserId=#{userid} AND orderproduct.OrderId=`order`.OrderId
               AND orderproduct.ProductId=product.ProductId;
    </select>


<!--每一个用户所购买的所有商品的总积分-->
    <select id="queryTotalCriditsById" parameterType="Integer" resultType="totalCreditsById">
        SELECT sum(ProductCredits) totalCredits FROM
               product,`order`,orderproduct  WHERE `order`.UserId=#{userid} AND orderproduct.OrderId=`order`.OrderId
               AND orderproduct.ProductId=product.ProductId;
    </select>


    <!--查询出上市商品的图片，名称，描述，价格，展示在商城的首页-->
    <select id="selectproduct" resultType="product">
        SELECT ProductId, productpicture, ProductName,ProductDescribe,ProductPrice
          FROM product WHERE ProductNew=1 LIMIT 0,10
    </select>

<!--  查询出热销商品的图片，名称，描述，价格，展示在商城的首页，热销商品的销售量-->
    <select id="hotSaleProduct" resultType="totalCreditsById">
                SELECT product.ProductId, productpicture, ProductName,ProductDescribe,ProductPrice,
                COUNT(OrderId) totalhotsale  FROM orderproduct,product WHERE
                product.ProductId=orderproduct.ProductId AND ProducthotSale=1
                GROUP BY  orderproduct.ProductId LIMIT 0,8
    </select>

    <!--查询出热评出行中(评论数最多的前十)商品的图片，名称，描述，价格，展示在商城的首页，这类商品的评论人数和评论内容，评论者-->
    <select id="Max10Comment" resultType="totalCreditsById">
      SELECT UserName, product.ProductId,    productpicture, ProductName,ProductDescribe,ProductPrice,
     product.ProductId, COUNT(`Comment`) totalcomment ,`Comment` FROM `comment` ,   product,`user`
    WHERE product.ProductId=`comment`.ProductId AND `user`.UserId=`Comment`.UserId AND ProductTypeId=1
     GROUP BY ProductId
      ORDER BY totalcomment DESC LIMIT 0,8
    </select>

    <!--查询出热评健康中,(评论数最多的前十)商品的图片，名称，描述，价格，展示在商城的首页，这类商品的评论人数和评论内容评论者-->
    <select id="selectjiangkang" resultType="totalCreditsById">
           SELECT  ProductTypeId, product.ProductId, UserName,  productpicture, ProductName,ProductDescribe,ProductPrice,
     product.ProductId, COUNT(`Comment`) totalcomment ,`Comment` FROM `comment` ,   product,user
    WHERE product.ProductId=`comment`.ProductId AND `user`.UserId=`Comment`.UserId AND ProductTypeId=2
     GROUP BY ProductId
      ORDER BY totalcomment DESC LIMIT 0,8
    </select>

    <!--查询出热评居家中(评论数最多的前十)商品的图片，名称，描述，价格，展示在商城的首页，这类商品的评论人数和评论内容评论者-->
    <select id="selectjujia" resultType="totalCreditsById">
               SELECT UserName, ProductTypeId,    productpicture, ProductName,ProductDescribe,ProductPrice,
       product.ProductId, COUNT(`Comment`) totalcomment ,Comment  FROM `comment` ,   product,`user`
      WHERE product.ProductId=`comment`.ProductId AND `user`.UserId=`Comment`.UserId AND ProductTypeId=4
     GROUP BY ProductId
      ORDER BY totalcomment DESC LIMIT 0,8
    </select>

    <!--查询出热评娱乐中(评论数最多的前十)商品的图片，名称，描述，价格，展示在商城的首页，这类商品的评论人数，评价者，和评论内容-->
    <select id="selectyule" resultType="totalCreditsById">
              SELECT   UserName,  ProductTypeId,    productpicture, ProductName,ProductDescribe,ProductPrice,
         product.ProductId, COUNT(`Comment`) totalcomment,`Comment` FROM `comment` ,   product,user
       WHERE product.ProductId=`comment`.ProductId AND `user`.UserId=`Comment`.UserId  AND ProductTypeId=5
       GROUP BY ProductId
       ORDER BY totalcomment DESC LIMIT 0,8
    </select>



    <!--查询出可用积分兑换的商品的图片，名称，描述，价格，和所需要的积分是多少，展示在商城的首页-->
  <select id="IsCredExchange" resultType="totalCreditsById">
          SELECT product.ProductId, productpicture, ProductName, ProductDisabled,ProductDescribe,ProductPrice,COUNT(`Comment`) totalcomment
            FROM product,comment WHERE  product.ProductId=`comment`.ProductId AND  ProductDisabled>0
            GROUP BY `Comment`.ProductId
         ORDER BY totalcomment DESC LIMIT 0,8
  </select>


    <!--店家推荐，推荐商品类型为医疗保健中得到商品好评度最多的商品-->
    <select id="StoreRecommendation" resultType="totalCreditsById">
           SELECT product. ProductId,  productpicture, ProductName,ProductDescribe,ProductPrice,
       COUNT(GoodComment>=4) totalcomment FROM  product,`comment`  WHERE  product.ProductId=`comment`.ProductId
       AND  ProductTypeId=6
        GROUP BY ProductId
       ORDER BY totalcomment DESC  LIMIT 0,4
    </select>


    <!--查询购物车里是否已有此商品-->
 <select id="queryShopCar" parameterType="shopcar" resultType="shopcar">
        SELECT * FROM shopcar WHERE UserId=#{userid} AND ProductId=#{productid}
    </select>

    <!--加入购物车-->
    <insert id="ShopCarInsert" parameterType="shopcar">
        INSERT INTO shopcar(UserId,ProductId,orderamount,Price) VALUES
          (#{userid},#{productid},#{orderamount},#{price})
    </insert>

    <!--查询购物车是否插入成功-->
    <select id="IsSuccessInsert" parameterType="shopcar" resultType="shopcar">
        SELECT * FROM shopcar
          WHERE UserId=#{userid} AND ProductId=#{productid} AND orderamount=#{orderamount} AND Price=#{price}
    </select>


    <!--查看此商品是否已在收藏夹中-->
    <select id="queryFavorite" parameterType="favorites" resultType="favorites">
        SELECT * FROM favorites WHERE UserId=#{userid}  AND ProductId=#{productid}
    </select>

    <!--新增商品到收藏表中-->
    <insert id="InsertFavorites" parameterType="favorites">
        INSERT INTO favorites(UserId,ProductId) VALUES(#{userid},#{productid})
    </insert>


    <!--查看商品插入到收藏夹中是否成功-->
    <select id="IsSuccess" parameterType="favorites" resultType="favorites">
         SELECT * FROM favorites WHERE UserId=#{userid}  AND ProductId=#{productid}
    </select>


    <!--查询商品的浏览次数是否为空-->
    <select id="queryLookcount" parameterType="Integer" resultType="Integer">
        SELECT ProductLookCount FROM product WHERE ProductId=#{productid}
    </select>


<!--商品浏览次数当为空时，赋值为1-->
    <update id="setLookcount" parameterType="Integer">
        UPDATE product set ProductLookCount=1 WHERE ProductId=#{productid}
    </update>

    <!--商品浏览次数当不为空时，让它自动加1-->
    <update id="AutoIncreaseOne" parameterType="Integer">
        UPDATE product set ProductLookCount=ProductLookCount+1 WHERE ProductId=#{productid}
    </update>


    <!--选出商品的图片，价格，名称，评论数-->
    <select id="queryTotalCommentshop" resultType="totalCreditsById" parameterType="Integer">
            SELECT comment.ProductId,productpicture, ProductName,ProductPrice,
                 COUNT(`UserId`) shopComment FROM `comment`,product WHERE `comment`.ProductId=product.ProductId
                 GROUP BY `comment`.ProductId LIMIT #{startpage},15
    </select>

    <!--根据商品的id,查询出每个商品对应的好评度个数-->
    <select id="EveryShopGoodComment" parameterType="Integer" resultType="Integer">
        SELECT COUNT(GoodComment) onegood  FROM `comment` WHERE ProductId=#{productid} AND
         GoodComment>=4
    </select>
</mapper>