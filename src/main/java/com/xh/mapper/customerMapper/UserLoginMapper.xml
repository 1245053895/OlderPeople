<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.mapper.customerMapper.UserLoginMapper">
    <!--根据登录用户的用户名查询出该登录用户的用户名和密码-->
    <select id="selectAllNameAndPwd" resultType="user" parameterType="String">
    SELECT UserId, UserName, UserPwd, UserSex, UserRealName, UserPhone, UserBirthday, UserAddress,
    UserEmail, CreditsCore, UserInputDate, UserZip, UserLoginCount, UserLoginTime, User_A,
    User_B, User_C FROM `user` WHERE UserName=#{username}
    </select>

    <!--根据登录用户的id向用户日志表中插入用户开始登录的时间，用户的登录ip-->
    <insert id="insertStartTimeAndIp" parameterType="com.xh.po.Userlog">
        INSERT INTO userlog(UserId,StartLoginTime,UserIp) VALUES(#{userid},#{startlogintime},#{userip})
    </insert>

    <!--根据用户id插入用户的结束登录时间-->
    <insert id="updateEndLoginTime" parameterType="com.xh.po.Userlog">
        UPDATE userlog SET EndLoginTime=#{endlogintime} WHERE UserId=#{userid}
    </insert>

    <!--用户注册后向数据库中插入一个新的用户-->
    <insert id="insertNewUser" parameterType="user">
        INSERT INTO user(UserName,UserPhone,UserPwd,UserInputDate) VALUES (#{username},#{userphone},#{userpwd},#{userinputdate})
    </insert>


    <!--个人资料中修改登录密码，根据登录用户的id修改密码-->
    <update id="updataPwdById" parameterType="user">
        UPDATE user SET UserPwd=#{userpwd} WHERE UserId=#{userid}
    </update>

    <!--个人中心里修改登录密码，根据登录用户的id修改电话-->
    <update id="updataLoginPhone" parameterType="user">
        UPDATE user SET UserPhone=#{userphone} WHERE UserId=#{userid}
    </update>

    <!--个人中心我的积分显示-->
    <select id="queryAllById" parameterType="Integer" resultType="totalCreditsById">
        SELECT ProductPicture,ProductName,product.ProductId, ProductCredits,order.EndTime FROM
               product,`order`,orderproduct  WHERE `order`.UserId=#{userid} AND orderproduct.OrderId=`order`.OrderId
               AND orderproduct.ProductId=product.ProductId;
    </select>


<!--每一个用户所购买的所有商品的总积分-->
    <select id="queryTotalCriditsById" parameterType="Integer" resultType="totalCreditsById">
        SELECT sum(ProductCredits) totalCredits FROM
               product,`order`,orderproduct  WHERE `order`.UserId=#{userid} AND orderproduct.OrderId=`order`.OrderId
               AND orderproduct.ProductId=product.ProductId;
    </select>


</mapper>